name: GitHub Release
on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - ".github/**"
      - "README.md"

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed scripts
        run: |
          changed_scripts=$(dirname $(git diff --name-only origin/main...HEAD) | sort -u | grep -Ev "(\.|\.github)")
          echo "changed_scripts=$changed_scripts" >> $GITHUB_ENV

      - name: Determine commit type
        run: |
          declare -A commit_types
          for script in $changed_scripts; do
              commit_message=$(git log -1 --pretty=%B -- "$script")
              if [[ "$commit_message" == *"feat!"* ]]; then
                  commit_types[$script]="major"
              elif [[ "$commit_message" == *"feat"* ]]; then
                  commit_types[$script]="minor"
              else
                  commit_types[$script]="patch"
              fi
          done
        
          for script in "${!commit_types[@]}"; do
              echo "$script=${commit_types[$script]}" >> $GITHUB_ENV
          done

      - name: Output changed scripts and commit types
        run: |
          for script in $changed_scripts; do
            commit_type=$(printenv "$script")
            echo "Changed script: $script. Commit type: $commit_type"
          done
          
      - name: Create release
        if: github.event.pull_request.merged == true 
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for script in $changed_scripts; do
            commit_type=$(printenv "$script")
            ./gh-release-creator/gh-release-creator.sh "$script" "$commit_type"
          done
